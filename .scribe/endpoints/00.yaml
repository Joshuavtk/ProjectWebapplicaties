name: Authenticatie
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: authentication
    metadata:
      title: 'Basic login'
      description: 'This is used for first time authentication.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'E-mail of the user.'
        required: true
        example: development@dxmusic.nl
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: aut
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
           "token": "String"
          }
           @response 401 "error": {
           "code": 401,
           "message": "Invalid credentials."
          }
        headers: []
        description: '200'
      -
        status: 429
        content: |-
          error": {
           "code": 429,
           "message": "Too Many Attempts."
          }
        headers: []
        description: '429'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: authentication/jwt
    metadata:
      title: 'Renew token'
      description: 'With this endpoint you can request an new token, the current one should be valid.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "token": "String"
          }
           @response 401 "error": {
           "code": 401,
           "message": "Unauthorized."
          }
        headers: []
        description: '200'
      -
        status: 429
        content: |-
          error": {
           "code": 429,
           "message": "Too Many Attempts."
          }
        headers: []
        description: '429'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: authentication/register
    metadata:
      title: 'Gebruiker registratie'
      description: |-
        een gebruiker kan een account aanmaken bij ons. als dit request successvol is krijgt de gebruiker een validatie code in de mail.
        De validatie code moet naar de validate endpoint gepost worden voor dat het account actief wordt.
        de gebruiker krijgt hier de meest basis rol.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'email address van de gebruiker.'
        required: true
        example: user@project.local
        type: string
        custom: []
      password:
        name: password
        description: 'nieuw wachtwoord.'
        required: true
        example: asdasd
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          "success": {
           "message": "Successful"
          }
           @response 422 "error": {
           "code": 422,
           "message": "Invalid request."
          }
        headers: []
        description: '200'
      -
        status: 429
        content: |-
          "error": {
           "code": 429,
           "message": "Too Many Attempts."
          }
        headers: []
        description: '429'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'authentication/{id}/Verify'
    metadata:
      title: 'Sctiveer gebruikers account'
      description: |-
        na het ontvangen van de mail met de validate code.
        Deze moet door de gebruiker worden ingevoerd om te bevestigen dat die zij/haar account is
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: vel
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      validationCode:
        name: validationCode
        description: 'deze code heeft de gebruiker in de mail gekregen.'
        required: true
        example: et
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          "success": {
           "message": "account gevalideerd"
          }
           @response 422 "error": {
           "code": 422,
           "message": "Invalid request."
          }
        headers: []
        description: '200'
      -
        status: 429
        content: |-
          "error": {
           "code": 429,
           "message": "Too Many Attempts."
          }
        headers: []
        description: '429'
    responseFields: []
