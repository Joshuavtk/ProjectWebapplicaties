TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`%` TRIGGER correct_measurement BEFORE INSERT ON hanze_project_23.weather_data\n         FOR EACH ROW\n         BEGIN\n             SELECT ROUND(SUM(lastValues.temp) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n             IF NEW.temp IS NULL THEN\n                SET NEW.temp = @result;\n             ELSEIF NEW.temp > @result * 1.2 OR NEW.temp < @result * .8 THEN\n                SET NEW.temp = @result * ROUND(RAND(), 1) * .4 + .8;\n             END IF;\n\n             SELECT ROUND(SUM(lastValues.dew_point_temp) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n             IF NEW.dew_point_temp IS NULL THEN\n                SET NEW.dew_point_temp = @result;\n             ELSEIF NEW.dew_point_temp > @result * 1.2 OR NEW.dew_point_temp < @result * .8 THEN\n                SET NEW.dew_point_temp = @result * ROUND(RAND(), 1) * .4 + .8;\n             END IF;\n\n             IF NEW.station_air_pressure IS NULL THEN\n                SELECT ROUND(SUM(lastValues.station_air_pressure) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.station_air_pressure = @result;\n             END IF;\n\n             IF NEW.sea_level_air_pressure IS NULL THEN\n                SELECT ROUND(SUM(lastValues.sea_level_air_pressure) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.sea_level_air_pressure = @result;\n             END IF;\n\n             IF NEW.visibility IS NULL THEN\n                SELECT ROUND(SUM(lastValues.visibility) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.visibility = @result;\n             END IF;\n\n             IF NEW.wind_speed IS NULL THEN\n                SELECT ROUND(SUM(lastValues.wind_speed) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.wind_speed = @result;\n             END IF;\n\n             IF NEW.precipitation IS NULL THEN\n                SELECT ROUND(SUM(lastValues.precipitation) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.precipitation = @result;\n             END IF;\n\n             IF NEW.snow_depth IS NULL THEN\n                SELECT ROUND(SUM(lastValues.snow_depth) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.snow_depth = @result;\n             END IF;\n\n             IF NEW.cloud_cover_percentage IS NULL THEN\n                SELECT ROUND(SUM(lastValues.cloud_cover_percentage) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.cloud_cover_percentage = @result;\n             END IF;\n\n             IF NEW.wind_direction IS NULL THEN\n                SELECT ROUND(SUM(lastValues.wind_direction) / COUNT(*), 1) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.wind_direction = @result;\n             END IF;\n\n             IF NEW.frost IS NULL THEN\n                SELECT (SUM(lastValues.frost) > (COUNT(lastValues.frost) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.frost = @result;\n             END IF;\n\n             IF NEW.rain IS NULL THEN\n                SELECT (SUM(lastValues.rain) > (COUNT(lastValues.rain) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.rain = @result;\n             END IF;\n\n             IF NEW.snow IS NULL THEN\n                SELECT (SUM(lastValues.snow) > (COUNT(lastValues.snow) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.snow = @result;\n             END IF;\n\n             IF NEW.hail IS NULL THEN\n                SELECT (SUM(lastValues.hail) > (COUNT(lastValues.hail) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.hail = @result;\n             END IF;\n\n             IF NEW.thunderstorm IS NULL THEN\n                SELECT (SUM(lastValues.thunderstorm) > (COUNT(lastValues.thunderstorm) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.thunderstorm = @result;\n             END IF;\n\n             IF NEW.tornado IS NULL THEN\n                SELECT (SUM(lastValues.tornado) > (COUNT(lastValues.tornado) / 2)) INTO @result FROM (SELECT * FROM weather_data WHERE station_name = NEW.station_name ORDER BY id DESC LIMIT 30) AS lastValues;\n                SET NEW.tornado = @result;\n             END IF;\n        END'
sql_modes=1168113696
definers='root@%'
client_cs_names='utf8mb4'
connection_cl_names='utf8mb4_unicode_ci'
db_cl_names='utf8mb4_general_ci'
created=165045498668
